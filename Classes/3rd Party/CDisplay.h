/* CDisplay.h - display manager interfaceWho:	By David Phillip Oster oster@netcom.comWhen:	This is the February 1997 version (1.4)	based on example code by Mike Marinkovich at apple.comUsage Policy:	You may use this any way you see fit, but if you find errors, I'd appreciate	knowing about them so I can revise this.How:	Call InitDisplay from your app's constructor function.Why:	This makes your powerplant program Display Manager aware, so if you use the	Monitors control panel to change the number of pixels on your monitors 	PowerPlant will see the change and do the right thing. The most obvious	bug that this fixes is, if your prgram has floating windows that are	invisble when your program isn't the frontmost application, if you reduce	the number of pixels on your monitors, then your floating windows will	become inaccessible.History:	- based on example code by Mike Marinkovich at apple.com	- converted to work with mixed Powerplant and non-PowerPlant windows by David Oster	- bug fix to interact with UScreenPort by Kent Johnson	- bug fix to measure window titles correctly by Mike Marinkovich at apple.com		(which does not work, so it was taken out, put guess back in.)	- bug fix to not crash when we try to set the zoom state of a non-Powerplant, 		non-zooomable window. (but does it actually zoom a non-Powerplant, but zoomable window?)	- bug fix to measure window titles correctly	- bug fix to handle wrong window list being current with Control Strip	- bug fix to remove write to nil in call to AEGetKeyPtr (Thanks steve!)Note:	Remember to set the Display Manager aware bit in your SIZE resource! */#pragma once#if !TARGET_OS_MAC || TARGET_API_MAC_CARBON  #error CDisplay only works on Classic MacOS#endifclass CDisplay {public:	static void Init();	// put CDisplay::Init() in your app's constructor function.	static void Stop();	// put CDisplay::Stop() in your app's destructor function.};// еее ERZ begin additions#ifdef PowerPlant_PCH#include PowerPlant_PCH#endif#include <LAttachment.h>const MessageT msg_DisplayManagerResize = 2050;	// LWindow*, window being changed// base class for a Display Manager Window Attachmenttypedef class CDispMgrWindAttach : public LAttachment {public:					CDispMgrWindAttach() : LAttachment(msg_DisplayManagerResize) {}					CDispMgrWindAttach(LStream *inStream) : LAttachment(inStream) {mMessage = msg_DisplayManagerResize;}} CDispMgrWindAttach, *CDispMgrWindAttachPtr;// DispMgr Wind Attachment that assumes window is to always be full screen.typedef class CFullScreenWindAttach : public CDispMgrWindAttach {public:					CFullScreenWindAttach() : CDispMgrWindAttach() {}					CFullScreenWindAttach(LStream *inStream) : CDispMgrWindAttach(inStream) {}protected:	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);} CFullScreenWindAttach, *CFullScreenWindAttachPtr;