// =============================================================================// DatabaseDefines.h                         ©1996, Sacred Tree Software, inc.// // Macro definitions to define compile option for database engine//// created:   7/29/96, ERZ// =============================================================================#pragma once// Set DB_DEBUG_MODE to 1 to use enable debugging messages#define DB_DEBUG_MODE 1// Set DB_V15 to 1 to use v1.5 extensions, necessary for use of CRecordList or CRecord// or cross-platform compilation.// Set it to 0 to disable v1.5 extensions#define DB_V15	1// Set DB_IGNORE_ERRORS to 1 if you want do disable the integrity checks on files that// are normally performed when they are first opened.// Set it to 0 leave integity checks enabled#define DB_IGNORE_ERRORS 0// Set DB_CLEAR_NEW_RECORDS to 1 if you want new records to start off filled with zeros.// Set it to 0 to have their contents start with undefined characters.#define DB_CLEAR_NEW_RECORDS 1// ======================= T H R E A D   S U P P O R T   F L A G S =========================// Set DB_THREAD_SUPPORT to 1 if you want the database to be thread safe, meaning you can// spawn multipule threads that can safely access the same file(s) simultaneously// Set it to 0 if you won't be accessing the same file(s) from different threads. This will// save the overhead of setting and clearing mutex semaphores ( a 10% - 12% slowdown) and // reduce code size (by about 10% for the Database code, and minus 16k of PP Thread Objects)// (for PowerPC without optimizations, 68k will be different)#define DB_THREAD_SUPPORT 0// IMPORTANT NOTE: Only methods marked ** Thread Safe ** should be called from within threads//	that are accessing the same file(s) simultaneously.// Normally the database engine checks for the presence of the system thread support before making// calls that require it. There is some minor overhead involved in this (checking a boolean)// Set DB_REQUIRE_THREADS to 1 to compile the database engine to assume that the system supports// multithreading. This means your application must check for the presence of thread support// _before_ using database calls, and exit if the system doesn't have thread support. This flag is// ignored if DB_THREAD_SUPPORT is 0#define DB_REQUIRE_THREADS 0